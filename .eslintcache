[{"D:\\999\\IT\\OSPanel\\domains\\localhost\\node\\client\\src\\index.js":"1","D:\\999\\IT\\OSPanel\\domains\\localhost\\node\\client\\src\\reportWebVitals.js":"2","D:\\999\\IT\\OSPanel\\domains\\localhost\\node\\client\\src\\App.tsx":"3","D:\\999\\IT\\OSPanel\\domains\\localhost\\node\\client\\src\\Components\\Table\\Table.tsx":"4","D:\\999\\IT\\OSPanel\\domains\\localhost\\node\\client\\src\\Components\\Filter\\Filter.tsx":"5","D:\\999\\IT\\OSPanel\\domains\\localhost\\node\\client\\src\\State\\Issue\\IssueProvider.tsx":"6","D:\\999\\IT\\OSPanel\\domains\\localhost\\node\\client\\src\\State\\Filter\\FilterProvider.tsx":"7","D:\\999\\IT\\OSPanel\\domains\\localhost\\node\\client\\src\\State\\Steps\\StepsProvider.tsx":"8","D:\\999\\IT\\OSPanel\\domains\\localhost\\node\\client\\src\\State\\Filter\\StateFilter.ts":"9","D:\\999\\IT\\OSPanel\\domains\\localhost\\node\\client\\src\\State\\Filter\\ReducerFilter.ts":"10","D:\\999\\IT\\OSPanel\\domains\\localhost\\node\\client\\src\\State\\Filter\\ActionsFilter.ts":"11","D:\\999\\IT\\OSPanel\\domains\\localhost\\node\\client\\src\\State\\Steps\\ReducerSteps.ts":"12","D:\\999\\IT\\OSPanel\\domains\\localhost\\node\\client\\src\\State\\Steps\\StateSteps.ts":"13","D:\\999\\IT\\OSPanel\\domains\\localhost\\node\\client\\src\\State\\Steps\\ActionsSteps.ts":"14","D:\\999\\IT\\OSPanel\\domains\\localhost\\node\\client\\src\\State\\Issue\\ReducerIssue.ts":"15","D:\\999\\IT\\OSPanel\\domains\\localhost\\node\\client\\src\\State\\Issue\\StateIssue.ts":"16","D:\\999\\IT\\OSPanel\\domains\\localhost\\node\\client\\src\\State\\Issue\\ActionsIssue.ts":"17","D:\\999\\IT\\OSPanel\\domains\\localhost\\node\\client\\src\\Request\\request.ts":"18","D:\\999\\IT\\OSPanel\\domains\\localhost\\node\\client\\src\\Components\\Table\\HeaderTable.tsx":"19","D:\\999\\IT\\OSPanel\\domains\\localhost\\node\\client\\src\\Components\\Table\\BodyTable.tsx":"20","D:\\999\\IT\\OSPanel\\domains\\localhost\\node\\client\\src\\Components\\Table\\LinkIssue.tsx":"21"},{"size":519,"mtime":1612880361054,"results":"22","hashOfConfig":"23"},{"size":375,"mtime":1612774136372,"results":"24","hashOfConfig":"23"},{"size":895,"mtime":1612881142505,"results":"25","hashOfConfig":"23"},{"size":813,"mtime":1612880359662,"results":"26","hashOfConfig":"23"},{"size":1437,"mtime":1612883404431,"results":"27","hashOfConfig":"23"},{"size":1455,"mtime":1612881230688,"results":"28","hashOfConfig":"23"},{"size":811,"mtime":1612778741614,"results":"29","hashOfConfig":"23"},{"size":1766,"mtime":1612880364006,"results":"30","hashOfConfig":"23"},{"size":170,"mtime":1612774136182,"results":"31","hashOfConfig":"23"},{"size":367,"mtime":1612774136169,"results":"32","hashOfConfig":"23"},{"size":342,"mtime":1612774136058,"results":"33","hashOfConfig":"23"},{"size":368,"mtime":1612774136253,"results":"34","hashOfConfig":"23"},{"size":178,"mtime":1612774136261,"results":"35","hashOfConfig":"23"},{"size":360,"mtime":1612774136244,"results":"36","hashOfConfig":"23"},{"size":354,"mtime":1612774136223,"results":"37","hashOfConfig":"23"},{"size":161,"mtime":1612774136235,"results":"38","hashOfConfig":"23"},{"size":327,"mtime":1612774136197,"results":"39","hashOfConfig":"23"},{"size":1787,"mtime":1612918638832,"results":"40","hashOfConfig":"23"},{"size":1154,"mtime":1612774136019,"results":"41","hashOfConfig":"23"},{"size":1669,"mtime":1612880362595,"results":"42","hashOfConfig":"23"},{"size":766,"mtime":1612774136028,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1mixj6f",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\999\\IT\\OSPanel\\domains\\localhost\\node\\client\\src\\index.js",[],"D:\\999\\IT\\OSPanel\\domains\\localhost\\node\\client\\src\\reportWebVitals.js",[],"D:\\999\\IT\\OSPanel\\domains\\localhost\\node\\client\\src\\App.tsx",[],"D:\\999\\IT\\OSPanel\\domains\\localhost\\node\\client\\src\\Components\\Table\\Table.tsx",[],"D:\\999\\IT\\OSPanel\\domains\\localhost\\node\\client\\src\\Components\\Filter\\Filter.tsx",["89"],"import React, {useContext, useEffect, useState} from \"react\";\r\nimport {FilterContext} from \"../../State/Filter/FilterProvider\";\r\nimport {EventEmitter} from \"@umijs/hooks/lib/useEventEmitter\";\r\nimport './filter.css'\r\nimport {FilterType} from \"../../Types/FilterType\";\r\n\r\ntype PropsType = {\r\n    applyFilter$: EventEmitter<string>\r\n}\r\n\r\nexport const Filter = ({applyFilter$}: PropsType) => {\r\n    const [value, setValue] = useState('default filter')\r\n    const [isList, setList] = useState(false)\r\n    const [isOne, setOne] = useState(false)\r\n    const {filters} = useContext(FilterContext)\r\n    const setIsList = () => setList(!isList)\r\n    const applyFilter = (filter: FilterType) => {\r\n        if (isOne) {\r\n            applyFilter$.emit(filter.jql)\r\n        }\r\n        setOne(!isOne)\r\n        setValue(filter.name)\r\n        setIsList()\r\n    }\r\n    return <div className=\"select-box\">\r\n            <div className={`options-container options-container--is-active_${isList}`}>\r\n                {filters && filters.map(filter => <div key={filter.id} onClick={() => applyFilter(filter)} className=\"option\">\r\n                    <input type=\"radio\" className=\"radio\" id={filter.name} name=\"category\"/>\r\n                    <label htmlFor={filter.name}>{filter.name}</label>\r\n                </div>)}\r\n            </div>\r\n            <div className=\"selected\" onClick={setIsList}>\r\n                {value}\r\n            </div>\r\n    </div>\r\n}\r\n","D:\\999\\IT\\OSPanel\\domains\\localhost\\node\\client\\src\\State\\Issue\\IssueProvider.tsx",["90"],"import React, {useContext, useEffect, useReducer} from 'react'\r\nimport {issueReducer} from \"./ReducerIssue\";\r\nimport {issueState, IssueStateType} from \"./StateIssue\";\r\nimport {requestIssue} from \"../../Request/request\";\r\nimport {actionIssue} from \"./ActionsIssue\";\r\nimport {EventEmitter} from \"@umijs/hooks/lib/useEventEmitter\";\r\nimport {StepsContext} from \"../Steps/StepsProvider\";\r\n\r\nexport const IssueContext = React.createContext<IssueStateType>({} as IssueStateType)\r\n\r\ntype PropsType = {\r\n    applyFilter$: EventEmitter<string>\r\n    children: any\r\n}\r\n\r\nexport const IssueProvider = ({applyFilter$, children}: PropsType) => {\r\n    const [state, dispatch] = useReducer(issueReducer, issueState)\r\n    const {userInfo, stepError, stepGenerationTable, stepChangeFilter} = useContext(StepsContext)\r\n    useEffect( () => {\r\n        if (userInfo !== null) {\r\n            getIssue('')\r\n        }\r\n    }, [userInfo])\r\n    applyFilter$.useSubscription(async (filter) => {\r\n        await getIssue(filter)\r\n        stepChangeFilter(filter)\r\n    })\r\n    const getIssue = async (filter: string) => {\r\n        try {\r\n            const data = await requestIssue.getIssue(filter).then(res => res)\r\n            dispatch(actionIssue.setIssue(data))\r\n            stepGenerationTable()\r\n        } catch (err) {\r\n            stepError(err.message)\r\n        }\r\n    }\r\n\r\n    return <IssueContext.Provider value={state}>\r\n        {children}\r\n    </IssueContext.Provider>\r\n}\r\n","D:\\999\\IT\\OSPanel\\domains\\localhost\\node\\client\\src\\State\\Filter\\FilterProvider.tsx",[],"D:\\999\\IT\\OSPanel\\domains\\localhost\\node\\client\\src\\State\\Steps\\StepsProvider.tsx",[],"D:\\999\\IT\\OSPanel\\domains\\localhost\\node\\client\\src\\State\\Filter\\StateFilter.ts",[],"D:\\999\\IT\\OSPanel\\domains\\localhost\\node\\client\\src\\State\\Filter\\ReducerFilter.ts",[],"D:\\999\\IT\\OSPanel\\domains\\localhost\\node\\client\\src\\State\\Filter\\ActionsFilter.ts",[],"D:\\999\\IT\\OSPanel\\domains\\localhost\\node\\client\\src\\State\\Steps\\ReducerSteps.ts",[],"D:\\999\\IT\\OSPanel\\domains\\localhost\\node\\client\\src\\State\\Steps\\StateSteps.ts",[],"D:\\999\\IT\\OSPanel\\domains\\localhost\\node\\client\\src\\State\\Steps\\ActionsSteps.ts",[],"D:\\999\\IT\\OSPanel\\domains\\localhost\\node\\client\\src\\State\\Issue\\ReducerIssue.ts",[],"D:\\999\\IT\\OSPanel\\domains\\localhost\\node\\client\\src\\State\\Issue\\StateIssue.ts",[],"D:\\999\\IT\\OSPanel\\domains\\localhost\\node\\client\\src\\State\\Issue\\ActionsIssue.ts",[],"D:\\999\\IT\\OSPanel\\domains\\localhost\\node\\client\\src\\Request\\request.ts",[],"D:\\999\\IT\\OSPanel\\domains\\localhost\\node\\client\\src\\Components\\Table\\HeaderTable.tsx",[],"D:\\999\\IT\\OSPanel\\domains\\localhost\\node\\client\\src\\Components\\Table\\BodyTable.tsx",["91"],"import React, {useContext} from \"react\";\r\nimport {Assignee, IssueType, Status} from \"../../Types/IssuesType\";\r\nimport {LinkIssue} from \"./LinkIssue\";\r\nimport {EventEmitter} from \"@umijs/hooks/lib/useEventEmitter\";\r\n\r\ntype PropsType = {\r\n    status: Status[] | undefined\r\n    assignee: Assignee[] | undefined\r\n    issuetype: IssueType[] | undefined\r\n    followLink$: EventEmitter<string>\r\n}\r\n\r\nexport const BodyTable = React.memo(({status, issuetype, assignee, followLink$}: PropsType) => {\r\n    return <tbody>\r\n    {assignee?.length !== 0 && assignee?.map((item, idx) => <tr key={idx}>\r\n        <td> {item.name}</td>\r\n        <td>\r\n            <table className=\"tableauStatusHeader\">\r\n                <tbody>\r\n                {issuetype?.length !== 0 && issuetype?.map((issueType, idxI) => <tr key={idxI}>\r\n                    <td>\r\n                        <img style={{width: '20px', height: '20px'}} src={issueType.iconUrl} alt={issueType.name}/>\r\n                    </td>\r\n                </tr>)}\r\n                </tbody>\r\n            </table>\r\n        </td>\r\n        {status?.map((s, idxS) => <td key={idxS}>\r\n            <table className=\"tableauStatusBody\">\r\n                <tbody>\r\n                {item.issues.map((itemY, idxY) => <tr key={idxY}>\r\n                    {itemY.map((itemX, idxX) => <LinkIssue\r\n                               key={idxX}\r\n                               issues={itemX}\r\n                               status={s.name}\r\n                               followLink$={followLink$}\r\n                           />)}\r\n                </tr>)}\r\n                </tbody>\r\n            </table>\r\n        </td>)}\r\n    </tr>)}\r\n    </tbody>\r\n})\r\n","D:\\999\\IT\\OSPanel\\domains\\localhost\\node\\client\\src\\Components\\Table\\LinkIssue.tsx",[],{"ruleId":"92","severity":1,"message":"93","line":1,"column":28,"nodeType":"94","messageId":"95","endLine":1,"endColumn":37},{"ruleId":"96","severity":1,"message":"97","line":23,"column":8,"nodeType":"98","endLine":23,"endColumn":18,"suggestions":"99"},{"ruleId":"92","severity":1,"message":"100","line":1,"column":16,"nodeType":"94","messageId":"95","endLine":1,"endColumn":26},"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getIssue'. Either include it or remove the dependency array.","ArrayExpression",["101"],"'useContext' is defined but never used.",{"desc":"102","fix":"103"},"Update the dependencies array to be: [getIssue, userInfo]",{"range":"104","text":"105"},[901,911],"[getIssue, userInfo]"]